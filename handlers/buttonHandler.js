const fs = require('fs');
const path = require('path');
const ascii = require('ascii-table');

async function loadButtons(client) {
  // Cria uma nova inst√¢ncia de ascii-table com o t√≠tulo "Buttons List"
  const table = new ascii('Buttons List');
  
  // Obt√©m o caminho completo da pasta "buttons"
  const buttonsFolder = path.join(__dirname, '../buttons');

  // L√™ o conte√∫do da pasta "buttons"
  const files = await fs.promises.readdir(buttonsFolder);

  // Filtra os arquivos que terminam com ".js"
  const jsFiles = files.filter((file) => file.endsWith('.js'));

  // Itera sobre cada arquivo retornado pela fun√ß√£o readdir
  jsFiles.forEach((file) => {
    // Obt√©m o caminho completo do arquivo
    const filePath = path.join(buttonsFolder, file);

    // Importa o bot√£o definido em cada arquivo
    const button = require(filePath);

    // Se o bot√£o n√£o tiver um ID, retorna
    if (!button.id) return;

    // Adiciona o bot√£o ao mapa de bot√µes do cliente com a chave sendo o ID do bot√£o
    client.buttons.set(button.id, button);

    // Define as colunas da tabela
    table.setHeading('Button ID', 'Status');

    // Adiciona uma nova linha √† tabela com o ID do bot√£o e uma mensagem de sucesso
    table.addRow(`${button.id}`, 'üü© Success');

    // Exibe o nome do arquivo que foi carregado
    console.log(`Loaded button file: ${file}`);
    console.log(table.toString());
    
  })
}
module.exports = loadButtons ;